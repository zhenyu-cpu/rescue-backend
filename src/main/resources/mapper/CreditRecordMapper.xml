<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaye.rescuebackend.mapper.CreditRecordMapper">

    <resultMap id="BaseResultMap" type="com.xiaye.rescuebackend.model.CreditRecord">
            <result property="id" column="id" jdbcType="BIGINT"/>
            <result property="companyId" column="company_id" jdbcType="BIGINT"/>
            <result property="creditPre" column="credit_pre" jdbcType="BIGINT"/>
            <result property="creditNext" column="credit_next" jdbcType="BIGINT"/>
            <result property="state" column="state" jdbcType="BIGINT"/>
            <result property="message" column="message" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,company_id,credit_pre,
        credit_next,state,message
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from credit_record
        where 
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from credit_record
        where 
    </delete>
    <insert id="insert">
        insert into credit_record
        ( id,company_id,credit_pre
        ,credit_next,state,message
        )
        values (#{id,jdbcType=BIGINT},#{companyId,jdbcType=BIGINT},#{creditPre,jdbcType=BIGINT}
        ,#{creditNext,jdbcType=BIGINT},#{state,jdbcType=BIGINT},#{message,jdbcType=VARCHAR}
        )
    </insert>
    <insert id="insertSelective">
        insert into credit_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null">id,</if>
                <if test="companyId != null">company_id,</if>
                <if test="creditPre != null">credit_pre,</if>
                <if test="creditNext != null">credit_next,</if>
                <if test="state != null">state,</if>
                <if test="message != null">message,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="id != null">#{id,jdbcType=BIGINT},</if>
                <if test="companyId != null">#{companyId,jdbcType=BIGINT},</if>
                <if test="creditPre != null">#{creditPre,jdbcType=BIGINT},</if>
                <if test="creditNext != null">#{creditNext,jdbcType=BIGINT},</if>
                <if test="state != null">#{state,jdbcType=BIGINT},</if>
                <if test="message != null">#{message,jdbcType=VARCHAR},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.xiaye.rescuebackend.model.CreditRecord">
        update credit_record
        <set>
                <if test="id != null">
                    id = #{id,jdbcType=BIGINT},
                </if>
                <if test="companyId != null">
                    company_id = #{companyId,jdbcType=BIGINT},
                </if>
                <if test="creditPre != null">
                    credit_pre = #{creditPre,jdbcType=BIGINT},
                </if>
                <if test="creditNext != null">
                    credit_next = #{creditNext,jdbcType=BIGINT},
                </if>
                <if test="state != null">
                    state = #{state,jdbcType=BIGINT},
                </if>
                <if test="message != null">
                    message = #{message,jdbcType=VARCHAR},
                </if>
        </set>
        where  
    </update>
    <update id="updateByPrimaryKey" parameterType="com.xiaye.rescuebackend.model.CreditRecord">
        update credit_record
        set 
            id =  #{id,jdbcType=BIGINT},
            company_id =  #{companyId,jdbcType=BIGINT},
            credit_pre =  #{creditPre,jdbcType=BIGINT},
            credit_next =  #{creditNext,jdbcType=BIGINT},
            state =  #{state,jdbcType=BIGINT},
            message =  #{message,jdbcType=VARCHAR}
        where  
    </update>
</mapper>
