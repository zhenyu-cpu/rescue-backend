<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaye.rescuebackend.mapper.CreditApplyMapper">

    <resultMap id="BaseResultMap" type="com.xiaye.rescuebackend.model.CreditApply">
            <result property="id" column="id" jdbcType="BIGINT"/>
            <result property="companyId" column="company_id" jdbcType="BIGINT"/>
            <result property="applyuserName" column="applyuser_name" jdbcType="VARCHAR"/>
            <result property="applyuserPhone" column="applyuser_phone" jdbcType="VARCHAR"/>
            <result property="applyTime" column="apply_time" jdbcType="TIMESTAMP"/>
            <result property="message" column="message" jdbcType="VARCHAR"/>
            <result property="changeMessage" column="change_message" jdbcType="VARCHAR"/>
            <result property="promiseMessage" column="promise_message" jdbcType="VARCHAR"/>
            <result property="state" column="state" jdbcType="BIGINT"/>
            <result property="rejectMessage" column="reject_message" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,company_id,applyuser_name,
        applyuser_phone,apply_time,message,
        change_message,promise_message,state,
        reject_message
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from credit_apply
        where 
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from credit_apply
        where 
    </delete>
    <insert id="insert">
        insert into credit_apply
        ( id,company_id,applyuser_name
        ,applyuser_phone,apply_time,message
        ,change_message,promise_message,state
        ,reject_message)
        values (#{id,jdbcType=BIGINT},#{company_id,jdbcType=BIGINT},#{applyuser_name,jdbcType=VARCHAR}
        ,#{applyuser_phone,jdbcType=VARCHAR},#{apply_time,jdbcType=TIMESTAMP},#{message,jdbcType=VARCHAR}
        ,#{change_message,jdbcType=VARCHAR},#{promise_message,jdbcType=VARCHAR},#{state,jdbcType=BIGINT}
        ,#{reject_message,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective">
        insert into credit_apply
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null">id,</if>
                <if test="company_id != null">company_id,</if>
                <if test="applyuser_name != null">applyuser_name,</if>
                <if test="applyuser_phone != null">applyuser_phone,</if>
                <if test="apply_time != null">apply_time,</if>
                <if test="message != null">message,</if>
                <if test="change_message != null">change_message,</if>
                <if test="promise_message != null">promise_message,</if>
                <if test="state != null">state,</if>
                <if test="reject_message != null">reject_message,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="id != null">#{id,jdbcType=BIGINT},</if>
                <if test="company_id != null">#{company_id,jdbcType=BIGINT},</if>
                <if test="applyuser_name != null">#{applyuser_name,jdbcType=VARCHAR},</if>
                <if test="applyuser_phone != null">#{applyuser_phone,jdbcType=VARCHAR},</if>
                <if test="apply_time != null">#{apply_time,jdbcType=TIMESTAMP},</if>
                <if test="message != null">#{message,jdbcType=VARCHAR},</if>
                <if test="change_message != null">#{change_message,jdbcType=VARCHAR},</if>
                <if test="promise_message != null">#{promise_message,jdbcType=VARCHAR},</if>
                <if test="state != null">#{state,jdbcType=BIGINT},</if>
                <if test="reject_message != null">#{reject_message,jdbcType=VARCHAR},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.xiaye.rescuebackend.model.CreditApply">
        update credit_apply
        <set>
                <if test="id != null">
                    id = #{id,jdbcType=BIGINT},
                </if>
                <if test="company_id != null">
                    company_id = #{company_id,jdbcType=BIGINT},
                </if>
                <if test="applyuser_name != null">
                    applyuser_name = #{applyuser_name,jdbcType=VARCHAR},
                </if>
                <if test="applyuser_phone != null">
                    applyuser_phone = #{applyuser_phone,jdbcType=VARCHAR},
                </if>
                <if test="apply_time != null">
                    apply_time = #{apply_time,jdbcType=TIMESTAMP},
                </if>
                <if test="message != null">
                    message = #{message,jdbcType=VARCHAR},
                </if>
                <if test="change_message != null">
                    change_message = #{change_message,jdbcType=VARCHAR},
                </if>
                <if test="promise_message != null">
                    promise_message = #{promise_message,jdbcType=VARCHAR},
                </if>
                <if test="state != null">
                    state = #{state,jdbcType=BIGINT},
                </if>
                <if test="reject_message != null">
                    reject_message = #{reject_message,jdbcType=VARCHAR},
                </if>
        </set>
        where  
    </update>
    <update id="updateByPrimaryKey" parameterType="com.xiaye.rescuebackend.model.CreditApply">
        update credit_apply
        set 
            id =  #{id,jdbcType=BIGINT},
            company_id =  #{company_id,jdbcType=BIGINT},
            applyuser_name =  #{applyuser_name,jdbcType=VARCHAR},
            applyuser_phone =  #{applyuser_phone,jdbcType=VARCHAR},
            apply_time =  #{apply_time,jdbcType=TIMESTAMP},
            message =  #{message,jdbcType=VARCHAR},
            change_message =  #{change_message,jdbcType=VARCHAR},
            promise_message =  #{promise_message,jdbcType=VARCHAR},
            state =  #{state,jdbcType=BIGINT},
            reject_message =  #{reject_message,jdbcType=VARCHAR}
        where  
    </update>
</mapper>
