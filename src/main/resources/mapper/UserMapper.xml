<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaye.rescuebackend.mapper.UserMapper">

    <resultMap id="BaseResultMap" type="com.xiaye.rescuebackend.model.User">
            <result property="id" column="id" jdbcType="BIGINT"/>
            <result property="username" column="username" jdbcType="VARCHAR"/>
            <result property="user_phone" column="user_phone" jdbcType="VARCHAR"/>
            <result property="password" column="password" jdbcType="VARCHAR"/>
            <result property="company_id" column="company_id" jdbcType="BIGINT"/>
            <result property="role" column="role" jdbcType="VARCHAR"/>
            <result property="approved" column="approved" jdbcType="TINYINT"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,username,user_phone,
        password,company_id,role,
        approved
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from user
        where 
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from user
        where 
    </delete>
    <insert id="insert">
        insert into user
        ( id,username,user_phone
        ,password,company_id,role
        ,approved)
        values (#{id,jdbcType=BIGINT},#{username,jdbcType=VARCHAR},#{user_phone,jdbcType=VARCHAR}
        ,#{password,jdbcType=VARCHAR},#{company_id,jdbcType=BIGINT},#{role,jdbcType=VARCHAR}
        ,#{approved,jdbcType=TINYINT})
    </insert>
    <insert id="insertSelective">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null">id,</if>
                <if test="username != null">username,</if>
                <if test="user_phone != null">user_phone,</if>
                <if test="password != null">password,</if>
                <if test="company_id != null">company_id,</if>
                <if test="role != null">role,</if>
                <if test="approved != null">approved,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="id != null">#{id,jdbcType=BIGINT},</if>
                <if test="username != null">#{username,jdbcType=VARCHAR},</if>
                <if test="user_phone != null">#{user_phone,jdbcType=VARCHAR},</if>
                <if test="password != null">#{password,jdbcType=VARCHAR},</if>
                <if test="company_id != null">#{company_id,jdbcType=BIGINT},</if>
                <if test="role != null">#{role,jdbcType=VARCHAR},</if>
                <if test="approved != null">#{approved,jdbcType=TINYINT},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.xiaye.rescuebackend.model.User">
        update user
        <set>
                <if test="id != null">
                    id = #{id,jdbcType=BIGINT},
                </if>
                <if test="username != null">
                    username = #{username,jdbcType=VARCHAR},
                </if>
                <if test="user_phone != null">
                    user_phone = #{user_phone,jdbcType=VARCHAR},
                </if>
                <if test="password != null">
                    password = #{password,jdbcType=VARCHAR},
                </if>
                <if test="company_id != null">
                    company_id = #{company_id,jdbcType=BIGINT},
                </if>
                <if test="role != null">
                    role = #{role,jdbcType=VARCHAR},
                </if>
                <if test="approved != null">
                    approved = #{approved,jdbcType=TINYINT},
                </if>
        </set>
        where  
    </update>
    <update id="updateByPrimaryKey" parameterType="com.xiaye.rescuebackend.model.User">
        update user
        set 
            id =  #{id,jdbcType=BIGINT},
            username =  #{username,jdbcType=VARCHAR},
            user_phone =  #{user_phone,jdbcType=VARCHAR},
            password =  #{password,jdbcType=VARCHAR},
            company_id =  #{company_id,jdbcType=BIGINT},
            role =  #{role,jdbcType=VARCHAR},
            approved =  #{approved,jdbcType=TINYINT}
        where  
    </update>
</mapper>
